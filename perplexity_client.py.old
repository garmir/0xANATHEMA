
# Local LLM Client - Replacement for Perplexity API
import asyncio
from pathlib import Path
import sys

sys.path.append(str(Path(__file__).parent / ".taskmaster"))
from adapters.local_api_adapter import LocalAPIAdapter

class LocalPerplexityClient:
    """Drop-in replacement for Perplexity client using local LLMs"""
    
    def __init__(self, api_key: str = None):
        # API key not needed for local LLMs
        self.adapter = LocalAPIAdapter()
    
    async def chat_completion(self, messages, model=None, **kwargs):
        """Chat completion using local LLM"""
        return await self.adapter.perplexity_chat_completion(messages, model, **kwargs)
    
    async def research_query(self, query: str, context: str = ""):
        """Research query using local LLM"""
        return await self.adapter.perplexity_research_query(query, context)

# Global client instance
perplexity_client = LocalPerplexityClient()
