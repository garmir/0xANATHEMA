apiVersion: v1
kind: Service
metadata:
  name: task-master-ai-service
  namespace: task-master-ai
  labels:
    app.kubernetes.io/name: task-master-ai
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: task-master-platform
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: task-master-ai
    app.kubernetes.io/instance: production
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 300

---
apiVersion: v1
kind: Service
metadata:
  name: task-master-ai-headless
  namespace: task-master-ai
  labels:
    app.kubernetes.io/name: task-master-ai
    app.kubernetes.io/component: headless-service
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: task-master-ai
    app.kubernetes.io/instance: production
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: task-master-ai-internal
  namespace: task-master-ai
  labels:
    app.kubernetes.io/name: task-master-ai
    app.kubernetes.io/component: internal-service
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: task-master-ai
    app.kubernetes.io/instance: production
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: task-master-ai-ingress
  namespace: task-master-ai
  labels:
    app.kubernetes.io/name: task-master-ai
    app.kubernetes.io/component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - task-master-ai.yourdomain.com
    secretName: task-master-ai-tls
  rules:
  - host: task-master-ai.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: task-master-ai-service
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: task-master-ai-service
            port:
              number: 80
      - path: /health
        pathType: Exact
        backend:
          service:
            name: task-master-ai-service
            port:
              number: 80
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: task-master-ai-service
            port:
              number: 9090

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: task-master-ai-network-policy
  namespace: task-master-ai
  labels:
    app.kubernetes.io/name: task-master-ai
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: task-master-ai
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
  
  # Allow traffic from monitoring namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
  
  # Allow inter-pod communication within namespace
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: task-master-ai
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
  
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow HTTPS traffic for API calls
  - to: []
    ports:
    - protocol: TCP
      port: 443
  
  # Allow HTTP traffic (if needed)
  - to: []
    ports:
    - protocol: TCP
      port: 80
  
  # Allow communication with Kubernetes API server
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 443